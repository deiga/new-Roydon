/ check whether user logged in
/ if not login or order as guest
/ login returns to this page
/ order as guest:
/   - email from order and creates user
/   - address from order and create address for user
/   - link user and address to order
/ current_user.present && addresses.blank?
/   - address from order and create address for user
/   - link user and address to order
/ current_user.present && addresses.any
/   - select address

- if not current_user# or params.include?(:cont)
  = link_to t('shop.session.sign_in'), new_user_session_path
  tai jatka tilausta
.order-form
  = semantic_form_for @order, url: { action: :create } do |f|
    = f.semantic_errors :user, :address
    = f.semantic_fields_for :user do |uf|
      = uf.inputs do
        = uf.input :email
        - if current_user and current_user.addresses.any?
          = uf.input :address, as: :select, collection: @order.user.addresses
    - if not current_user or current_user.addresses.empty?
      = f.semantic_fields_for :address do |af|
        = af.inputs do
          = af.input :street
          = af.input :city, required: false
          = af.input :postal_number
          = af.input :country, required: false
          = af.input :phone_number
          = af.input :description, required: false
          = af.input :home, as: :boolean
    = f.inputs do
      = f.input :payment, as: :select, collection: PAYMENT_TYPES
      = f.input :message, as: :text
    = f.actions :submit
    / = render 'order_errors', object: @order

    / = fields_for :user do |uf|
    /   .field
    /     = uf.label :email
    /     = uf.email_field :email#, value: current_user ? current_user.email : ''

    / - if not current_user or not current_user.addresses.any?
    /   = f.fields_for :address do |af|
    /     .field
    /       = af.label :street
    /       = af.text_field :street, cols: 40, required: true
    /     .field
    /       = af.label :city
    /       = af.text_field :city, size: 40
    /     .field
    /       = af.label :postal_number
    /       = af.text_field :postal_number, size: 40, required: true
    /     .field
    /       = af.label :country
    /       = af.text_field :country, size: 40
    /     .field
    /       = af.label :phone_number
    /       = af.phone_field :phone_number, size: 40, required: true
    /     .field
    /       = af.label :description
    /       = af.text_area :description, rows: 3, columns: 40
    /     .field
    /       = af.label :home
    /       = af.check_box :home
    / - else
    /   .field
    /     = f.label :address
    /     = f.collection_select :address, current_user.addresses, :id, :name, prompt: 'Select delivery address'
    / .field
    /   = f.label :payment
    /   = f.select :payment, PAYMENT_TYPES, prompt: 'Select a payment method', required: 'required'
    / .field
    /   = f.label :message
    /   = f.text_area :message, rows: 3, cols: 40
    / .actions
    /   = f.submit 'Place order'
