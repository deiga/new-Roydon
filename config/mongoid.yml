<%
require 'uri'
uri = URI.parse(ENV['MONGOLAB_URI'])
username = uri.user
password = uri.password
url = uri.host
port = uri.port
host = "#{url}:#{port}"
database = uri.path[1..-1]
%>
common: &common
  sessions:
    default:
      username: <%= username %>
      password: <%= password %>
      database: <%= database %>
      hosts:
        - <%= host %>

  options:
    # Change the default write concern. (default = { w: 1 })
    # write:
    # # w: 1
    # Configuration for whether or not to allow access to fields that do
    # not have a field definition on the model. (default: true)
    # allow_dynamic_fields: true

    # Includes the root model name in json serialization. (default: false)
    # include_root_in_json: false

    # Include the _type field in serializaion. (default: false)
    # include_type_for_serialization: false

    # Preload all models in development, needed when models use
    # inheritance. (default: false)
    # preload_models: false

    # Protect id and type from mass assignment. (default: true)
    # protect_sensitive_fields: true

    # Raise an error when performing a #find and the document is not found.
    # (default: true)
    # raise_not_found_error: true

    # Raise an error when defining a scope with the same name as an
    # existing method. (default: false)
    # scope_overwrite_exception: false

    # Use Active Support's time zone in conversions. (default: true)
    # use_activesupport_time_zone: true

    # Ensure all times are UTC in the app side. (default: false)
    # use_utc: false

development:
  <<: *common
  sessions:
    default:
      database: roydon_develop
      hosts:
        - localhost:27017
development_remote:
  <<: *common
test:
  <<: *common
  sessions:
    default:
      database: roydon_test
      hosts:
        - localhost:27017
      options:
        read: primary
        # In the test environment we lower the retries and retry interval to
        # low amounts for fast failures.
        max_retries: 1
        retry_interval: 0
production:
  <<: *common
staging:
  <<: *common
