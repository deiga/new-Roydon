<%
begin
  credentials = YAML.load_file('config/db.credentials.yml')[ENV['RAILS_ENV']]
  username = credentials['user']
  password = credentials['password']
  port = credentials['port']
  url = credentials['url']
  database = credentials['database']
  host = "#{url}:#{port}"
rescue Exception => e
  p 'Error while reading db credentials!'
  require 'uri'
  uri = URI.parse(ENV['MONGOLAB_URI'])
  username = uri.user
  password = uri.password
  url = uri.host
  port = uri.port
  host = "#{url}:#{port}"
  database = uri.path[1..-1]
end
%>
common: &common
  sessions:
    default:
      username: <%= username %>
      password: <%= password %>
      database: <%= database %>
      hosts:
        - <%= host %>
      options:
        # Change whether the session persists in safe mode by default.
        # (default: false)
        # safe: false

        # Change the default consistency model to :eventual or :strong.
        # :eventual will send reads to secondaries, :strong sends everything
        # to master. (default: :eventual)
        consistency: :strong
  options:
    # Configuration for whether or not to allow access to fields that do
    # not have a field definition on the model. (default: true)
    # allow_dynamic_fields: true

    # Enable the identity map, needed for eager loading. (default: false)
    identity_map_enabled: true

    # Includes the root model name in json serialization. (default: false)
    # include_root_in_json: false

    # Include the _type field in serializaion. (default: false)
    # include_type_for_serialization: false

    # Preload all models in development, needed when models use
    # inheritance. (default: false)
    # preload_models: false

    # Protect id and type from mass assignment. (default: true)
    # protect_sensitive_fields: true

    # Raise an error when performing a #find and the document is not found.
    # (default: true)
    # raise_not_found_error: true

    # Raise an error when defining a scope with the same name as an
    # existing method. (default: false)
    # scope_overwrite_exception: false

    # Skip the database version check, used when connecting to a db without
    # admin access. (default: false)
    # skip_version_check: false

    # User Active Support's time zone in conversions. (default: true)
    # use_activesupport_time_zone: true

    # Ensure all times are UTC in the app side. (default: false)
    # use_utc: false

development:
  <<: *common
development_remote:
  <<: *common
test:
  <<: *common
  sessions:
    default:
      database: <%= database %>
      hosts:
        - <%= host %>
      options:
        consistency: :strong
        max_retries: 1
        retry_interval: 0
production:
  <<: *common
staging:
  <<: *common
