%h1= t 'mongoid.models.shop/shopping_cart.one'
- unless @cart.empty?
  = form_for @cart, url: { action: 'update' } do |f|
    %table
      %thead
        %tr
          %td= t 'shop.cart.headers.product'
          %td= t 'shop.cart.headers.count'
          %td= t 'shop.cart.headers.price'
          %td= t 'shop.cart.headers.overall'
          %td
      %tbody
        = f.fields_for :items, @cart_items do |items_fields|
          %tr
            %td<
              = link_to items_fields.object.product.name, shop_product_path(items_fields.object.product.id)
              %br
              = "(#{items_fields.object.selected_option.join(', ')})" if items_fields.object.selected_option.size > 0
            %td= items_fields.text_field :quantity
            %td=raw " #{humanized_money items_fields.object.single_price} #{currency_symbol}"
            %td=raw " #{humanized_money items_fields.object.price} #{currency_symbol}"
            %td= link_to '', shop_shopping_cart_remove_item_path(@cart.id,items_fields.object), class: 'fontawesome-remove', method: :post
        %tr#price
          %td{colspan: 3}= "#{t 'shop.overall'}:"
          %td=raw "#{humanized_money @cart.price} #{currency_symbol}"
    = f.submit
  = link_to t('shop.cart.action.empty'), shop_shopping_cart_path(@cart.id), data: { confirm: t('shop.confirmation') }, :method => :delete
  = link_to t('shop.checkout'), new_shop_order_path, method: :get
- else
  %p= t 'shop.cart.empty'

